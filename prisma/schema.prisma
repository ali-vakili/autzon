// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  // If you want to use Prisma Migrate, you will need to manually create a shadow database
  // https://neon.tech/docs/guides/prisma-migrate#configure-a-shadow-database-for-prisma-migrate
  // make sure to append ?connect_timeout=10 to the connection string
  // shadowDatabaseUrl = env(“SHADOW_DATABASE_URL”)
}

enum Role {
  USER
  AGENT
}

model Image {
  id        String   @id @default(uuid())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //relations
  agent      AutoGalleryAgent? @relation(fields: [agent_id], references: [id], onDelete: Cascade)
  agent_id   String?           @unique
  gallery    AutoGallery?      @relation(fields: [gallery_id], references: [id], onDelete: Cascade)
  gallery_id String?           @unique
}

model Province {
  id        Int    @id
  name_fa   String
  name_en   String
  slug      String
  latitude  Float
  longitude Float
  cities    City[]
}

model City {
  id          Int           @id
  name_fa     String
  name_en     String
  slug        String
  latitude    Float
  longitude   Float
  province    Province      @relation(fields: [province_id], references: [id])
  province_id Int
  gallery     AutoGallery[]
}

model AutoGallery {
  id           String           @id @default(uuid())
  name         String           @db.VarChar(30)
  image_id     Image?
  city         City             @relation(fields: [city_id], references: [id])
  city_id      Int
  address      String
  phone_number String           @db.VarChar(11)
  agent        AutoGalleryAgent @relation(fields: [agent_id], references: [id], onDelete: Cascade)
  agent_id     String
  is_verified  Boolean          @default(false)
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
}

model AutoGalleryAgent {
  id            String        @id @default(uuid())
  firstName     String?       @db.VarChar(30)
  lastName      String?       @db.VarChar(30)
  image_id      Image?
  role          Role          @default(AGENT)
  email         String        @unique
  password      String
  phone_number  String?       @db.VarChar(11)
  gallery       AutoGallery[]
  is_subscribed Boolean       @default(false)
  is_verified   Boolean       @default(false)
  join_date     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}
